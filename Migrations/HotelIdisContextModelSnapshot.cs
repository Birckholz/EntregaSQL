// <auto-generated />
using System;
using EntregaSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntregaSQL.Migrations
{
    [DbContext(typeof(HotelIdisContext))]
    partial class HotelIdisContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntregaSql.Cliente", b =>
                {
                    b.Property<int>("idCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCliente"));

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("nacionalidade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("idCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("EntregaSql.Conta", b =>
                {
                    b.Property<int>("idConta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idConta"));

                    b.Property<float>("total")
                        .HasColumnType("real");

                    b.HasKey("idConta");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("EntregaSql.Endereco", b =>
                {
                    b.Property<int>("idEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idEndereco"));

                    b.Property<string>("UF")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("cidade")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("idCliente")
                        .HasColumnType("int");

                    b.Property<int?>("idFilial")
                        .HasColumnType("int");

                    b.Property<string>("rua")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idEndereco");

                    b.HasIndex("idCliente");

                    b.HasIndex("idFilial");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("EntregaSql.Funcionario", b =>
                {
                    b.Property<int>("idFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idFuncionario"));

                    b.Property<string>("nome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idFuncionario");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("EntregaSql.Pagamento", b =>
                {
                    b.Property<int>("idPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPagamento"));

                    b.Property<int>("idConta")
                        .HasColumnType("int");

                    b.Property<string>("tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("idPagamento");

                    b.HasIndex("idConta");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("EntregaSql.Quarto", b =>
                {
                    b.Property<int>("idQuarto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idQuarto"));

                    b.Property<bool>("acomadaEsp")
                        .HasColumnType("bit");

                    b.Property<int?>("fkfilialHotelidFilial")
                        .HasColumnType("int");

                    b.Property<int>("idFilial")
                        .HasColumnType("int");

                    b.Property<int>("maxCap")
                        .HasColumnType("int");

                    b.Property<string>("tipo")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<float>("valor")
                        .HasColumnType("real");

                    b.HasKey("idQuarto");

                    b.HasIndex("fkfilialHotelidFilial");

                    b.ToTable("Quartos");
                });

            modelBuilder.Entity("EntregaSql.Reserva", b =>
                {
                    b.Property<int>("idReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idReserva"));

                    b.Property<DateTime>("dataCheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dataCheckOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dataModificacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("idCliente")
                        .HasColumnType("int");

                    b.Property<int>("idFuncionario")
                        .HasColumnType("int");

                    b.Property<string>("statusPedido")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("idReserva");

                    b.HasIndex("idCliente");

                    b.HasIndex("idFuncionario");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("EntregaSql.Servico", b =>
                {
                    b.Property<int>("idServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idServico"));

                    b.Property<string>("nomeServ")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("valor")
                        .HasColumnType("real");

                    b.HasKey("idServico");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("EntregaSql.ServicoConta", b =>
                {
                    b.Property<int>("idServico")
                        .HasColumnType("int");

                    b.Property<int>("idConta")
                        .HasColumnType("int");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.HasKey("idServico", "idConta");

                    b.HasIndex("idConta");

                    b.ToTable("servicosConta");
                });

            modelBuilder.Entity("EntregaSql.Telefone", b =>
                {
                    b.Property<int>("idTelefone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTelefone"));

                    b.Property<int?>("clienteTidCliente")
                        .HasColumnType("int");

                    b.Property<int?>("idCliente")
                        .HasColumnType("int");

                    b.Property<int?>("idFilial")
                        .HasColumnType("int");

                    b.Property<string>("telefone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("idTelefone");

                    b.HasIndex("clienteTidCliente");

                    b.HasIndex("idFilial");

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("EntregaSql.contaHospedagem", b =>
                {
                    b.Property<int>("idConta")
                        .HasColumnType("int");

                    b.Property<int>("idReserva")
                        .HasColumnType("int");

                    b.HasKey("idConta", "idReserva");

                    b.HasIndex("idReserva");

                    b.ToTable("contaHospedagems");
                });

            modelBuilder.Entity("EntregaSql.filialHotel", b =>
                {
                    b.Property<int>("idFilial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idFilial"));

                    b.Property<string>("nome")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("numQuartosCasal")
                        .HasColumnType("int");

                    b.Property<int>("numQuartosFamilia")
                        .HasColumnType("int");

                    b.Property<int>("numQuartosPresidencial")
                        .HasColumnType("int");

                    b.Property<int>("numQuartosSolteiro")
                        .HasColumnType("int");

                    b.HasKey("idFilial");

                    b.ToTable("filiaisHoteis");
                });

            modelBuilder.Entity("EntregaSql.reservaQuarto", b =>
                {
                    b.Property<int>("idReserva")
                        .HasColumnType("int");

                    b.Property<int>("idQuarto")
                        .HasColumnType("int");

                    b.HasKey("idReserva", "idQuarto");

                    b.HasIndex("idQuarto");

                    b.ToTable("ReservaQuartos");
                });

            modelBuilder.Entity("EntregaSql.Endereco", b =>
                {
                    b.HasOne("EntregaSql.Cliente", "fkCliente")
                        .WithMany("EnderecosCliente")
                        .HasForeignKey("idCliente");

                    b.HasOne("EntregaSql.filialHotel", "fkFilialHotel")
                        .WithMany()
                        .HasForeignKey("idFilial");

                    b.Navigation("fkCliente");

                    b.Navigation("fkFilialHotel");
                });

            modelBuilder.Entity("EntregaSql.Pagamento", b =>
                {
                    b.HasOne("EntregaSql.Conta", "fkConta")
                        .WithMany()
                        .HasForeignKey("idConta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fkConta");
                });

            modelBuilder.Entity("EntregaSql.Quarto", b =>
                {
                    b.HasOne("EntregaSql.filialHotel", "fkfilialHotel")
                        .WithMany("Quartos")
                        .HasForeignKey("fkfilialHotelidFilial");

                    b.Navigation("fkfilialHotel");
                });

            modelBuilder.Entity("EntregaSql.Reserva", b =>
                {
                    b.HasOne("EntregaSql.Cliente", "fkCliente")
                        .WithMany("reservasFeitas")
                        .HasForeignKey("idCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntregaSql.Funcionario", "fkFuncionario")
                        .WithMany("reservasRealizadas")
                        .HasForeignKey("idFuncionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fkCliente");

                    b.Navigation("fkFuncionario");
                });

            modelBuilder.Entity("EntregaSql.ServicoConta", b =>
                {
                    b.HasOne("EntregaSql.Conta", "fkConta")
                        .WithMany("servicosPorConta")
                        .HasForeignKey("idConta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntregaSql.Servico", "fkServico")
                        .WithMany("servicosPorConta")
                        .HasForeignKey("idServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fkConta");

                    b.Navigation("fkServico");
                });

            modelBuilder.Entity("EntregaSql.Telefone", b =>
                {
                    b.HasOne("EntregaSql.Cliente", "clienteT")
                        .WithMany("TelefonesCliente")
                        .HasForeignKey("clienteTidCliente");

                    b.HasOne("EntregaSql.filialHotel", "fkFilialHotel")
                        .WithMany("TelefonesHotel")
                        .HasForeignKey("idFilial");

                    b.Navigation("clienteT");

                    b.Navigation("fkFilialHotel");
                });

            modelBuilder.Entity("EntregaSql.contaHospedagem", b =>
                {
                    b.HasOne("EntregaSql.Conta", "fkConta")
                        .WithMany()
                        .HasForeignKey("idConta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntregaSql.Reserva", "fkReserva")
                        .WithMany()
                        .HasForeignKey("idReserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fkConta");

                    b.Navigation("fkReserva");
                });

            modelBuilder.Entity("EntregaSql.reservaQuarto", b =>
                {
                    b.HasOne("EntregaSql.Quarto", "fkQuarto")
                        .WithMany("quartosDaReserva")
                        .HasForeignKey("idQuarto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntregaSql.Reserva", "fkReserva")
                        .WithMany("quartosDaReserva")
                        .HasForeignKey("idReserva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fkQuarto");

                    b.Navigation("fkReserva");
                });

            modelBuilder.Entity("EntregaSql.Cliente", b =>
                {
                    b.Navigation("EnderecosCliente");

                    b.Navigation("TelefonesCliente");

                    b.Navigation("reservasFeitas");
                });

            modelBuilder.Entity("EntregaSql.Conta", b =>
                {
                    b.Navigation("servicosPorConta");
                });

            modelBuilder.Entity("EntregaSql.Funcionario", b =>
                {
                    b.Navigation("reservasRealizadas");
                });

            modelBuilder.Entity("EntregaSql.Quarto", b =>
                {
                    b.Navigation("quartosDaReserva");
                });

            modelBuilder.Entity("EntregaSql.Reserva", b =>
                {
                    b.Navigation("quartosDaReserva");
                });

            modelBuilder.Entity("EntregaSql.Servico", b =>
                {
                    b.Navigation("servicosPorConta");
                });

            modelBuilder.Entity("EntregaSql.filialHotel", b =>
                {
                    b.Navigation("Quartos");

                    b.Navigation("TelefonesHotel");
                });
#pragma warning restore 612, 618
        }
    }
}
